/*
 * Copyright Â©2024 Ewsgit<https://github.com/ewsgit> and YourDash<https://github.com/yourdash> contributors.
 * YourDash is licensed under the MIT License. (https://ewsgit.mit-license.org)
 */

import { existsSync, promises as fs } from "node:fs";
import path from "path";

let fileTemplate = `/**
 * This file is auto-generated by meta/generatePanelWidgets.js don't edit this file for any reason
 * instead you should run \`yarn run generate-panel-widgets\`
*/

import loadable from "@loadable/component";
import React from "react";

/* region loadable */const PanelWidgets={/* region widgets */};export default PanelWidgets
`;

let applicationsPathNames = await fs.readdir(path.resolve(process.cwd(), "../../applications/"));

applicationsPathNames = applicationsPathNames.filter((name) => name.indexOf(".") === -1);

let loadableRegionReplacement = "";
let routeRegionReplacement = "";

applicationsPathNames.forEach((appName, ind) => {
  if (existsSync(path.resolve(process.cwd(), `../../applications/${appName}/web/index.tsx`))) {
    loadableRegionReplacement += `const Widget${ind}=loadable(()=>import("@yourdash/applications/${appName}/web/index"));`;
    routeRegionReplacement += `"${appName}:${widgetName}": Widget${ind},`;
  }
});

fileTemplate = fileTemplate.replace("/* region loadable */", loadableRegionReplacement);
fileTemplate = fileTemplate.replace("/* region widgets */", routeRegionReplacement);

fs.writeFile(path.resolve(process.cwd(), "./src/app/panel/Widgets.tsx"), fileTemplate).then(() => {
  console.log("Generated Widgets.tsx Successfully");
});
